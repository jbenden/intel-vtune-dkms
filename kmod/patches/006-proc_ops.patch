--- a/src/pax/pax.c
+++ b/src/pax/pax.c
@@ -87,6 +87,14 @@ struct proc_dir_entry *pax_version_file
 
 static int pax_version_proc_read(struct seq_file*, void *);
 static int pax_version_proc_open(struct inode*, struct file*);
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(5,6,0)
+static const struct proc_ops pax_version_ops = {
+    .proc_open    = pax_version_proc_open,
+    .proc_read    = seq_read,
+    .proc_lseek   = seq_lseek,
+    .proc_release = single_release,
+};
+#else
 static struct file_operations pax_version_ops = {
     .owner = THIS_MODULE,
     .open  = pax_version_proc_open,
@@ -94,6 +102,7 @@ static struct file_operations pax_versio
     .llseek  = seq_lseek,
     .release  = single_release,
 };
+#endif
 
 // Print macros for kernel debugging
 
--- a/src/vtsspp/procfs.c
+++ b/src/vtsspp/procfs.c
@@ -607,6 +607,15 @@ static int vtss_procfs_ctrl_close(struct
     return 0;
 }
 
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(5,6,0)
+static const struct proc_ops vtss_procfs_ctrl_fops = {
+    .proc_read    = vtss_procfs_ctrl_read,
+    .proc_write   = vtss_procfs_ctrl_write,
+    .proc_open    = vtss_procfs_ctrl_open,
+    .proc_release = vtss_procfs_ctrl_close,
+    .proc_poll    = vtss_procfs_ctrl_poll,
+};
+#else
 static const struct file_operations vtss_procfs_ctrl_fops = {
     .owner   = THIS_MODULE,
     .read    = vtss_procfs_ctrl_read,
@@ -615,6 +624,7 @@ static const struct file_operations vtss
     .release = vtss_procfs_ctrl_close,
     .poll    = vtss_procfs_ctrl_poll,
 };
+#endif
 
 /* ************************************************************************* */
 
@@ -651,6 +661,14 @@ static int vtss_procfs_debug_open(struct
     return seq_open(file, &vtss_procfs_debug_sops);
 }
 
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(5,6,0)
+static const struct proc_ops vtss_procfs_debug_fops = {
+    .proc_open    = vtss_procfs_debug_open,
+    .proc_read    = seq_read,
+    .proc_lseek   = seq_lseek,
+    .proc_release = seq_release,
+};
+#else
 static const struct file_operations vtss_procfs_debug_fops = {
     .owner   = THIS_MODULE,
     .open    = vtss_procfs_debug_open,
@@ -658,6 +676,7 @@ static const struct file_operations vtss
     .llseek  = seq_lseek,
     .release = seq_release,
 };
+#endif
 
 /* ************************************************************************* */
 
@@ -725,6 +744,14 @@ static int vtss_procfs_cpumask_close(str
     return 0;
 }
 
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(5,6,0)
+static const struct proc_ops vtss_procfs_cpumask_fops = {
+    .proc_read    = vtss_procfs_cpumask_read,
+    .proc_write   = vtss_procfs_cpumask_write,
+    .proc_open    = vtss_procfs_cpumask_open,
+    .proc_release = vtss_procfs_cpumask_close,
+};
+#else
 static const struct file_operations vtss_procfs_cpumask_fops = {
     .owner   = THIS_MODULE,
     .read    = vtss_procfs_cpumask_read,
@@ -732,6 +759,7 @@ static const struct file_operations vtss
     .open    = vtss_procfs_cpumask_open,
     .release = vtss_procfs_cpumask_close,
 };
+#endif
 
 /* ************************************************************************* */
 
@@ -793,6 +821,14 @@ static int vtss_procfs_defsav_close(stru
     return 0;
 }
 
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(5,6,0)
+static const struct proc_ops vtss_procfs_defsav_fops = {
+    .proc_read    = vtss_procfs_defsav_read,
+    .proc_write   = vtss_procfs_defsav_write,
+    .proc_open    = vtss_procfs_defsav_open,
+    .proc_release = vtss_procfs_defsav_close,
+};
+#else
 static const struct file_operations vtss_procfs_defsav_fops = {
     .owner   = THIS_MODULE,
     .read    = vtss_procfs_defsav_read,
@@ -800,6 +836,7 @@ static const struct file_operations vtss
     .open    = vtss_procfs_defsav_open,
     .release = vtss_procfs_defsav_close,
 };
+#endif
 
 /* ************************************************************************* */
 
@@ -836,6 +873,14 @@ static int vtss_procfs_targets_open(stru
     return seq_open(file, &vtss_procfs_targets_sops);
 }
 
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(5,6,0)
+static const struct proc_ops vtss_procfs_targets_fops = {
+    .proc_open    = vtss_procfs_targets_open,
+    .proc_read    = seq_read,
+    .proc_lseek   = seq_lseek,
+    .proc_release = seq_release,
+};
+#else
 static const struct file_operations vtss_procfs_targets_fops = {
     .owner   = THIS_MODULE,
     .open    = vtss_procfs_targets_open,
@@ -843,6 +888,7 @@ static const struct file_operations vtss
     .llseek  = seq_lseek,
     .release = seq_release,
 };
+#endif
 
 /* ************************************************************************* */
 
@@ -903,6 +949,14 @@ static int vtss_procfs_timesrc_close(str
     return 0;
 }
 
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(5,6,0)
+static const struct proc_ops vtss_procfs_timesrc_fops = {
+    .proc_read    = vtss_procfs_timesrc_read,
+    .proc_write   = vtss_procfs_timesrc_write,
+    .proc_open    = vtss_procfs_timesrc_open,
+    .proc_release = vtss_procfs_timesrc_close,
+};
+#else
 static const struct file_operations vtss_procfs_timesrc_fops = {
     .owner   = THIS_MODULE,
     .read    = vtss_procfs_timesrc_read,
@@ -910,6 +964,7 @@ static const struct file_operations vtss
     .open    = vtss_procfs_timesrc_open,
     .release = vtss_procfs_timesrc_close,
 };
+#endif
 
 /* ************************************************************************* */
 
@@ -966,6 +1021,14 @@ static int vtss_procfs_timelimit_close(s
     return 0;
 }
 
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(5,6,0)
+static const struct proc_ops vtss_procfs_timelimit_fops = {
+    .proc_read    = vtss_procfs_timelimit_read,
+    .proc_write   = vtss_procfs_timelimit_write,
+    .proc_open    = vtss_procfs_timelimit_open,
+    .proc_release = vtss_procfs_timelimit_close,
+};
+#else
 static const struct file_operations vtss_procfs_timelimit_fops = {
     .owner   = THIS_MODULE,
     .read    = vtss_procfs_timelimit_read,
@@ -973,6 +1036,7 @@ static const struct file_operations vtss
     .open    = vtss_procfs_timelimit_open,
     .release = vtss_procfs_timelimit_close,
 };
+#endif
 
 /* ************************************************************************* */
 
@@ -1059,7 +1123,11 @@ void vtss_procfs_fini(void)
     }
 }
 
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(5,6,0)
+static int vtss_procfs_create_entry(const char* name, const struct proc_ops* fops)
+#else
 static int vtss_procfs_create_entry(const char* name, const struct file_operations* fops)
+#endif
 {
     struct proc_dir_entry *pde = proc_create(name, (mode_t)(mode ? (mode & 0666) : 0660), vtss_procfs_root, fops);
     if (pde == NULL) {
--- a/src/vtsspp/transport.c
+++ b/src/vtsspp/transport.c
@@ -1421,6 +1421,15 @@ static int vtss_transport_close(struct i
     return 0;
 }
 
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(5,6,0)
+static struct proc_ops vtss_transport_fops = {
+    .proc_read    = vtss_transport_read,
+    .proc_write   = vtss_transport_write,
+    .proc_open    = vtss_transport_open,
+    .proc_release = vtss_transport_close,
+    .proc_poll    = vtss_transport_poll,
+};
+#else
 static struct file_operations vtss_transport_fops = {
     .owner   = THIS_MODULE,
     .read    = vtss_transport_read,
@@ -1429,6 +1438,7 @@ static struct file_operations vtss_trans
     .release = vtss_transport_close,
     .poll    = vtss_transport_poll,
 };
+#endif
 
 static void vtss_transport_remove(struct vtss_transport_data* trnd)
 {
