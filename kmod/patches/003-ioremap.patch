--- a/src/chap.c
+++ b/src/chap.c
@@ -40,6 +40,10 @@
 #include "inc/ecb_iterators.h"
 #include "inc/utility.h"
 
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(5,6,0)
+#define ioremap_nocache ioremap
+#endif
+
 extern DRV_CONFIG         drv_cfg;
 extern CHIPSET_CONFIG     pma;
 extern CPU_STATE          pcb;
--- a/src/pci.c
+++ b/src/pci.c
@@ -45,6 +45,9 @@
 #include "inc/pci.h"
 #include "inc/utility.h"
 
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(5,6,0)
+#define ioremap_nocache ioremap
+#endif
 
 struct pci_bus* pci_buses[MAX_BUSNO] = {0};
 
--- a/src/socperf/src/haswellunc_sa.c
+++ b/src/socperf/src/haswellunc_sa.c
@@ -72,6 +72,10 @@
 #include "ecb_iterators.h"
 #include "inc/pci.h"
 
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(5,6,0)
+#define ioremap_nocache ioremap
+#endif
+
 static U64            counter_virtual_address = 0;
 static U32            counter_overflow[HSWUNC_SA_MAX_COUNTERS];
 extern LWPMU_DEVICE   device_uncore;
--- a/src/socperf/src/npk_uncore.c
+++ b/src/socperf/src/npk_uncore.c
@@ -71,6 +71,9 @@
 #include "inc/control.h"
 #include "inc/npk_uncore.h"
 
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(5,6,0)
+#define ioremap_nocache ioremap
+#endif
 
 extern LWPMU_DEVICE   device_uncore;
 static U32            counter_overflow[SOC_NPK_COUNTER_MAX_COUNTERS];
--- a/src/socperf/src/pci.c
+++ b/src/socperf/src/pci.c
@@ -68,6 +68,10 @@
 #include "socperfdrv.h"
 #include "pci.h"
 
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(5,6,0)
+#define ioremap_nocache ioremap
+#endif
+
 /* ------------------------------------------------------------------------- */
 /*!
  * @fn extern int SOCPERF_PCI_Read_From_Memory_Address(addr, val)
--- a/src/socperf/src/soc_uncore.c
+++ b/src/socperf/src/soc_uncore.c
@@ -70,6 +70,10 @@
 #include "inc/ecb_iterators.h"
 #include "inc/pci.h"
 
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(5,6,0)
+#define ioremap_nocache ioremap
+#endif
+
 #if defined (PCI_HELPERS_API)
 #include <asm/intel_mid_pcihelpers.h>
 #elif defined(DRV_CHROMEOS)
--- a/src/vtsspp/apic.c
+++ b/src/vtsspp/apic.c
@@ -32,6 +32,10 @@
 
 #include <asm/io.h>
 
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(5,6,0)
+#define ioremap_nocache ioremap
+#endif
+
 /* APIC base MSR */
 #define VTSS_APIC_BASE_MSR       0x01b
 
